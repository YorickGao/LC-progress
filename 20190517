Dynamic Programming

132. Palindrome Partitioning II:
     use a cut[] array to store the minimum cut at a certain index of the input string s.
     
139. Word Break:
     wordDict.contains(s.substring(j, i)).
     
152. Maximum Product Subarray:
     two variants max and min store the maximum value and minimum value. If nums[i] is negative, swap max and min, then
     max = max(nums[i], max * nums[i]), min = min(nums[i], min * nums[i]).


213. House Robber II:
     Divide it into two parts: 1...i-1 ans 2...i. Pick the max value.

