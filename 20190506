backtracking problem

131. Palindrome Partitioning:
     DP + backtracking solution:
     use dp to determie if a substring is palindrome.
     
     pure backtracking solution:
     use isPalindrome function to check if a string is palindrome.
     
140. Word break II:
     Caution: TLE

216. Combination sum III:
     easy-pass

306. Additive number:
     using a for loop to generate two number, pass them into isAdditive function. Then recursively call isAdditive fucntion
     until the index reaches the end.
     Primitive type cannot use functions like .euqals, .toString. It should be tramsform to reference type using type 
     conversion (e.g. (Long)sum ).

TrieNode:

211. Add and Search Word:
     A data structure called TrieNode to store its children and descendants.

212. Word search II:
     store string array into a trienode structure, then iterate char[][] board to search word.

DP:

357. Count numbers with unique digits:
     noted that add previous unique numbers.
