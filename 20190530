Two pointers

828. Unique Letter String:
     
844. Backspace String Compare:
     O(n) space string builder solution: easy pass.
     O(1) space solution:
        - from back to front
        - if count > 0 && != #, skip
        - if count == 0 && different, return false
        - if #, count++
        - if one ends, the other count == 0 && has any char return false
        - else return true
        
845. Longest Mountain in Array:
     two pointers and 3 steps: mountain down(skip invalid index), mountain up(find summit) and mountain down(find 
     mountain bottom).
     
881. Boats to Save People:
     greedy. Let lightest people shipped with heaviest people.
     
904. Fruit Into Baskets:
     use sliding window or:
     https://leetcode.com/problems/fruit-into-baskets/discuss/170745/Problem%3A-Longest-Subarray-With-2-Elements
     
923. 3Sum With Multiplicity:
     because 0 <= A[i] <= 100, the time complexity is O(n + 100*100).
     Loop i on all numbers,
     loop j on all numbers,
     check if k = target - i - j is valid.

     Add the number of this combination to result. 3 cases covers all possible combination:
     1) i == j == k
     2) i == j != k
     3) i < k && j < k

925. Long Pressed Name:
     easy pass.
