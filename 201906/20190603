Array

229. Majority Element II
     Moore Voting
      
238. Product of Array Except Self
     1) using prefix and sufix
     The product basically is calculated using the numbers before the current number and the numbers after the current number.
     Thus, we can scan the array twice. First, we calcuate the running product of the part before the current number. Second,
     we calculate the running product of the part after the current number through scanning from the end of the array.
     
283. Move Zeroes
     two pointers: one for pointing at non-zero number's index, one for iterating the array.
     
289. Game of Life
     use two bits to represent current state and next state respectively.
     
380. Insert Delete GetRandom O(1)
     map store value and its position. 
     nextInt can get a pseudorandom value.

381. Insert Delete GetRandom O(1) - Duplicates allowed
     use LinkedHashSet to store value's position in the list.

414. Third Maximum Number
     use priority queue. Notice that in this case, the priority queue size is not bigger than 4, although insert a element
     into priority queue. So, the time per insertion is O(log4).
     
442. Find All Duplicates in an Array
     when find a number i, flip the number at position i-1 to negative. 
     if the number at position i-1 is already negative, i is the number that occurs twice.
     
485. Max Consecutive Ones
     easy pass.

495. Teemo Attacking
     make sure to calculate end - start outside the for loop, before returning.
     
509. Fibonacci Number
     easy pass.
