Binary search:

Note: In a while(low < high) loop, we should prevent to use low = mid, because (low+high)/2 equals low when low is even.
      It would cause infinite loop. Instead, use low = mid + 1 and at the end of the loop just return low.

29. Divide two integers:
    noted that the big number input. Using long type to store input.
    Binary search idea can reduce the time complexity to O(logn).
    
33. Search in roted search array:
    Four contitions, first two are normal binary search. The reminder to solve unsorted array. We divide unsorted array into
    two parts. We can first (1)find out which segment is ordered (just judge the endpoint), then see if the target is not in 
    this segment, and if it is, then discard the other half and do normal binary search in this part. (2)If not, then discard 
    this part. Using the while loop that check (1) until we find the result.
    
    second solution is using bias: https://leetcode.windliang.cc/leetCode-33-Search-in-Rotated-Sorted-Array.html
    
34. Find first and last position of an Element in a sorted array:
    Two iteration to find start and end point.
    
35. Search insert position:
    easy pass.
    
50. Pow(x,n):
    noted the negative exponents and n to the power of -31.
    
74. Search a 2D Matrix:
    You'd better treat this matrix as a sorted array and matrix[i][j] = array[i * matrix.length + j].

81. Search in Rotated Sorted Array II:
    Basically same as leetcode 33, but make sure use a while loop inside the outer while loop to make nums[low] > nums[high].
    
153. Find Minimum in Rotated Sorted Array:
     easy pass.
     
162. Find Peak Element:
     If num[i] < num[i+1], then num[i+1...n-1] must contains a peak
     If num[i] > num[i+1], then num[0...i] must contains a peak
     (n is num.length)
 
167. Two Sum II - Input array is sorted:
     1) Two pointers: O(n)
     2) Binary Search: O(nlogn):
     3) Binary search + two pointers: O(n) but average is O(logn)
        Link: https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/discuss/51324/
     0ms-Java-Solution-Binary-Search-with-detailed-comment-share-you-opinion
